{
  "name": "neuroforge",
  "displayName": "NeuroForge",
  "description": "AI-powered memory and task automation for VSCode developers",
  "version": "0.1.0",
  "publisher": "734ai",
  "repository": {
    "type": "git",
    "url": "https://github.com/734ai/NeuroForge.git"
  },
  "engines": {
    "vscode": "^1.70.0"
  },
  "categories": [
    "AI",
    "Machine Learning",
    "Other"
  ],
  "keywords": [
    "ai",
    "memory",
    "automation",
    "task-runner",
    "development",
    "assistant"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "neuroforge.showMemoryBrowser",
        "title": "Show Memory Browser",
        "category": "NeuroForge"
      },
      {
        "command": "neuroforge.runTask",
        "title": "Run Task",
        "category": "NeuroForge"
      },
      {
        "command": "neuroforge.storeMemory",
        "title": "Store Current Context",
        "category": "NeuroForge"
      },
      {
        "command": "neuroforge.searchMemory",
        "title": "Search Memory",
        "category": "NeuroForge"
      },
      {
        "command": "neuroforge.autoCommit",
        "title": "Auto-commit Changes",
        "category": "NeuroForge"
      },
      {
        "command": "neuroforge.runTests",
        "title": "Run Tests with Memory",
        "category": "NeuroForge"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "neuroforge.showMemoryBrowser",
          "when": "true"
        },
        {
          "command": "neuroforge.runTask",
          "when": "true"
        },
        {
          "command": "neuroforge.storeMemory",
          "when": "true"
        },
        {
          "command": "neuroforge.searchMemory",
          "when": "true"
        },
        {
          "command": "neuroforge.autoCommit",
          "when": "true"
        },
        {
          "command": "neuroforge.runTests",
          "when": "true"
        }
      ],
      "editor/context": [
        {
          "command": "neuroforge.storeMemory",
          "group": "neuroforge",
          "when": "editorHasSelection"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "neuroforgeMemory",
          "name": "NeuroForge Memory",
          "when": "true"
        },
        {
          "id": "neuroforgeTasks",
          "name": "NeuroForge Tasks",
          "when": "true"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "neuroforge",
          "title": "NeuroForge",
          "icon": "$(brain)"
        }
      ]
    },
    "configuration": {
      "title": "NeuroForge",
      "properties": {
        "neuroforge.pythonPath": {
          "type": "string",
          "default": "python",
          "description": "Path to Python executable for NeuroForge agent"
        },
        "neuroforge.memoryPath": {
          "type": "string",
          "default": ".neuroforge",
          "description": "Relative path for NeuroForge memory storage"
        },
        "neuroforge.maxMemorySize": {
          "type": "number",
          "default": 100,
          "description": "Maximum memory size in MB for RAM buffer"
        },
        "neuroforge.autoStoreContext": {
          "type": "boolean",
          "default": true,
          "description": "Automatically store context on file changes"
        },
        "neuroforge.enableGitIntegration": {
          "type": "boolean",
          "default": true,
          "description": "Enable Git integration for workspace awareness"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.70.0",
    "@types/node": "^18.0.0",
    "@typescript-eslint/eslint-plugin": "^5.31.0",
    "@typescript-eslint/parser": "^5.31.0",
    "eslint": "^8.20.0",
    "typescript": "^4.7.4"
  },
  "dependencies": {
    "ws": "^8.8.0",
    "@types/ws": "^8.5.0"
  }
}
